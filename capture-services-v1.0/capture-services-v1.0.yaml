openapi: 3.1.0
x-stoplight:
  id: yewzi8y7jhaeg
info:
  version: '1.0'
  title: Application Form Capture Services
  summary: 'List of services for application form data entry, submission & tracking'
  description: 'This API facilitates the end-to-end process of application management. It begins by creating a unique application ID and then allows for the addition and modification of multiple data components, including applicant information, product (e.g., fixed deposit) details, nomination data, payin and payout instrument specifics. Furthermore, the API supports consent management, comprehensive form validation, and final submission of the application, while also providing endpoints for payment initiation and tracking, along with retrieval of applicable bank and payment instrument details. This unified approach streamlines data capture and ensures consistent, validated, and efficient processing of application forms'
  contact:
    name: akhilesh
    url: 'https://spliceforms.com/'
    email: api@apibanking.com
  license:
    url: 'https://spliceforms.com/'
    name: Commercial
servers:
  - url: 'https://api.stitch.spliceforms.com/capture'
paths:
  /v1/application-forms:
    post:
      tags:
        - form-capture
      summary: Initiate application form capture
      description: This endpoint initiates the form data entry for new application there by generating new application id. Subsequent API interactions to capture the application form sections should be done using the application id returned by this endpoint.
      operationId: initiateApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationInitiationRequest'
      responses:
        '200':
          description: Returns the OTP challenge response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationInitiationResponse'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: 5lav6ugrt0cyp
  '/v1/application-forms/{applicationId}/accounts':
    post:
      tags:
        - form-capture
      summary: Save Account Preferences
      description: It allows you to add or update the account details to an existing application identified by the provided applicationId.
      operationId: saveAccount
      parameters:
        - name: applicationId
          in: path
          description: The application id
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/FDAccountWithOptionalPayout'
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server. The response body will contain the data requested by the client.'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: gzltrz01rtgl2
  '/v1/application-forms/{applicationId}/accounts/{accountSerialNo}':
    get:
      tags:
        - form-capture
      summary: Fetch Account Preferences
      description: It allows you to fetch the existing account details against the provided applicationId.
      operationId: fetchAccount
      parameters:
        - name: applicationId
          in: path
          description: The application id
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
        - name: accountSerialNo
          in: path
          description: The account serial number
          required: true
          schema:
            $ref: '#/components/schemas/AccountSerialNo'
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server. The response body will contain the data requested by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    oneOf:
                      - $ref: '#/components/schemas/FDAccountWithOptionalPayout'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: s1qcizfbs6iki
  '/v1/application-forms/{applicationId}/accounts/{accountSerialNo}/nomination':
    post:
      tags:
        - form-capture
      summary: Save Nomination
      description: It allows you to add a new nominee to the account being created as part of the application
      operationId: saveAccountNomination
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
        - name: accountSerialNo
          in: path
          description: The account serial number
          required: true
          schema:
            $ref: '#/components/schemas/AccountSerialNo'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Nominee.yaml
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server.'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: 9n5wb39ehyf27
    get:
      tags:
        - form-capture
      summary: Fetch Nomination
      description: It allows you to fetch the existing nominee details against the provided applicationId.
      operationId: fetchAccountNomination
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
        - name: accountSerialNo
          in: path
          description: The account serial number
          required: true
          schema:
            $ref: '#/components/schemas/AccountSerialNo'
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server. The response body will contain the data requested by the client.'
          content:
            application/json:
              schema:
                $ref: ./models/Nominee.yaml
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: tdymzwr7isjrn
    delete:
      tags:
        - form-capture
      summary: Delete Nomination
      description: It allows you to delete the existing nominee details for the account
      operationId: deleteAccountNomination
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
        - name: accountSerialNo
          in: path
          description: The account serial number
          required: true
          schema:
            $ref: '#/components/schemas/AccountSerialNo'
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server.'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: iwbmr9lcwgdq6
  '/v1/application-forms/{applicationId}/payin-preferences':
    post:
      tags:
        - form-capture
      summary: Save Payin Preferences
      description: It allows you to save payin preferences for the application
      operationId: savePayinPreferences
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayinSourcePreference'
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server. The response body will contain the data requested by the client.'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: 9nohyjo4g7pml
    get:
      tags:
        - form-capture
      summary: Fetch Payin Preferences
      description: It allows you to fetch the existing payin preference details against the provided applicationId.
      operationId: fetchPayinPreferences
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server. The response body will contain the data requested by the client.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payin'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: 9s37wkgnopyrn
    delete:
      tags:
        - form-capture
      summary: Delete Payin Preferences
      description: It allows you to delete the existing payin preference details against the provided applicationId.
      operationId: deletePayinPreferences
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server.'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: mjy02dqmyih16
  '/v1/application-forms/{applicationId}/staff':
    post:
      tags:
        - form-capture
      summary: Save Staff
      description: It allows you to add staff details to an existing application identified by the provided applicationId.
      operationId: saveStaff
      parameters:
        - name: applicationId
          in: path
          description: The application id
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Staff.yaml
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server. '
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: 73mv8qm807e4n
    get:
      tags:
        - form-capture
      summary: Fetch Staff
      description: It allows you to fetch the existing staff details against the provided applicationId.
      operationId: fetchStaff
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server. The response body will contain the data requested by the client.'
          content:
            application/json:
              schema:
                $ref: ./models/Staff.yaml
              examples:
                Example 1:
                  value:
                    branchCode: '01102'
                    lgCode: C098
                    lcCode: C098
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: 7yqrhu9g8uf5q
    delete:
      tags:
        - form-capture
      summary: Delete Staff
      description: It allows you to delete the existing staff details against the provided applicationId.
      operationId: deleteStaff
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server.'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: m7meet32vv8cv
  '/v1/application-forms/{applicationId}/consents':
    post:
      tags:
        - form-capture
      summary: Save Consents
      description: It allows you to add or update the consent details to an existing application identified by the provided applicationId.
      operationId: saveConsents
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - consentIds
              properties:
                consentIds:
                  type: array
                  description: 'List of consent Ids from CMS, provided in application form.'
                  items:
                    $ref: 'stoplight://resources/overrides/o9idCqAmha8'
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server. The response body will contain the data requested by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  referenceId:
                    $ref: 'stoplight://resources/overrides/JVJLO1LAh5U'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: 8jpe1o12y8kon
    get:
      tags:
        - form-capture
      summary: Fetch Consents
      description: It allows you to fetch the existing consent details against the provided applicationId.
      operationId: fetchConsents
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      requestBody:
        content: {}
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server. The response body will contain the data requested by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  consentIds:
                    type: array
                    description: List of consent ids which are accepted by the applicant
                    items:
                      $ref: 'stoplight://resources/overrides/o9idCqAmha8'
                  referenceId:
                    $ref: 'stoplight://resources/overrides/JVJLO1LAh5U'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: fwr8ey3ep0a9m
  '/v1/application-forms/{applicationId}/payin':
    post:
      tags:
        - form-capture
      summary: Initiate Payin Request
      description: Initiates Payment based on the instrument mentioned in the request.
      operationId: initiatePayin
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      requestBody:
        description: Shared Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayinRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinInitiationResponse'
            text/html:
              schema:
                $ref: 'stoplight://resources/overrides/TNriCWFEB1s'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: syec6hhrtjyxb
  '/v1/application-forms/{applicationId}/payin/status':
    post:
      tags:
        - form-capture
      summary: Fetch Payin Status
      description: It retrieves the current status of the payment using the request reference number
      operationId: fetchPayinStatus
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatusRequest'
      responses:
        '200':
          description: Shared Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayinStatusResponse'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    voilations:
                      - field: string
                        in: string
                        message: string
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: luc99g76ks5n0
  '/v1/application-forms/{applicationId}/validation':
    post:
      tags:
        - form-capture
      summary: Validate Application Form
      description: 'It performs all the validations to ensure that the information captured in the application form is complete. If the application is already saved as a draft as part of step-by-step capture APIs then it reads the application form payload associated with the application id. Otherwise application form payload needs to be sent in the request body.    '
      operationId: validateApplicationForm
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ETBFDApplicationForm'
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server.'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: q3ceu762vrkr4
  '/v1/application-forms/{applicationId}/submission':
    post:
      tags:
        - form-capture
      summary: Submit Application Form
      description: |-
        It validates and submits the application form for processing. 
        If the application is already saved as a draft as part of step-by-step capture APIs then it reads the application form payload associated with the application id for submission.
        Otherwise application form payload needs to be sent in the request body.
        On successful acceptance of the application form, application is created in the system. Status API endpoint can be used to fetch the processing status of the application.
      operationId: submitApplicationForm
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ETBFDApplicationForm'
            examples: {}
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ETBFDApplicationStatus'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: qlosjv7cxj04b
  '/v1/applications/{applicationId}/status':
    get:
      tags:
        - status-tracking
      summary: Fetch Application Status
      description: It retrieves the current processing status of an application using its unique applicationId
      operationId: fetchApplicationStatus
      parameters:
        - name: applicationId
          in: path
          description: The application form Identifier.
          required: true
          schema:
            $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
      responses:
        '200':
          description: 'This status code indicates that the request was received, understood, and processed successfully by the server. The response body will contain the data requested by the client.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ETBFDApplicationStatus'
        '400':
          description: This status code indicates that the server could not understand or process the request due to invalid syntax or parameters. The client should modify the request and retry.
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 400
                    detail: string
                    instance: 'http://example.com'
                    validationErrors:
                      - message: string
                        properties:
                          - string
                        severity: ERROR
        '500':
          description: 'This status code means the server ran into an unexpected problem while processing your request. It indicates an issue on the server side, not with your input. Try refreshing or resubmitting your request after a short wait.'
          content:
            application/json:
              schema:
                $ref: ./models/ProblemJson.yaml
              examples:
                Example 1:
                  value:
                    title: string
                    status: 500
                    detail: string
                    instance: 'http://example.com'
      servers:
        - url: 'https://api.stitch.spliceforms.com/capture'
      x-stoplight:
        id: ltmky171j23xx
tags:
  - name: token-issue
    description: API endpoints for token issuance on successful authentication
  - name: form-capture
    description: API endpoints for filling the application form information and submit for processing
  - name: status-tracking
    description: API endpoints for tracking the status of application processing
components:
  schemas:
    FDAccountWithOptionalPayout:
      type: object
      title: FDAccountWithOptionalPayout
      description: 'Represents the preferences for FD account. Optionally payout preferences also can be provided  '
      x-stoplight:
        id: kmnqbs2c1nykz
      required:
        - branchCode
        - amount
        - interestPayoutTreatment
        - maturityInstruction
        - tenure
      properties:
        branchCode:
          $ref: 'stoplight://resources/overrides/DkpDaBt77Zw'
          description: The unique code representing the specific branch of the bank. The allowed values will have to comply with the values of "branchCode" codeset.
        amount:
          $ref: 'stoplight://resources/overrides/wbgPBBXK2qY'
        interestPayoutTreatment:
          $ref: 'stoplight://resources/overrides/GIH20YnXrJk'
        maturityInstruction:
          $ref: 'stoplight://resources/overrides/hNcvI153XgU'
        tenure:
          $ref: ./models/FDTenure.yaml
        payout:
          $ref: '#/components/schemas/FDPayout'
        accountSerialNo:
          $ref: '#/components/schemas/AccountSerialNo'
    FDPayout:
      type: object
      title: FDPayout
      description: Specifies the methods to payout FD interest and/or principal on maturity
      x-package: account.fd
      x-stoplight:
        id: zi0w6z8evo404
      required:
        - mode
        - instrument
      properties:
        mode:
          $ref: 'stoplight://resources/overrides/1Ll91UtXZ2s'
        instrument:
          oneOf:
            - $ref: '#/components/schemas/InternalBankAccount'
            - $ref: '#/components/schemas/ExternalBankAccount'
    InternalBankAccount:
      type: object
      title: InternalBankAccount
      description: Specifies the internal bank account details
      examples:
        - accountNo: '002001053410'
      x-stoplight:
        id: cqj717kedsbpl
      required:
        - accountNo
      properties:
        accountNo:
          $ref: 'stoplight://resources/overrides/swJoliwLU7s'
    ExternalBankAccount:
      type: object
      title: ExternalBankAccount
      description: Contains details of the NEFT instrument.
      x-package: payment.instrument
      x-stoplight:
        id: jp29joi2rdyw4
      required:
        - accountType
        - accountNo
        - ifsc
      properties:
        accountType:
          $ref: 'stoplight://resources/overrides/tCwO6x9ZNk0'
        accountNo:
          $ref: 'stoplight://resources/overrides/swJoliwLU7s'
        ifsc:
          $ref: 'stoplight://resources/overrides/5js4tqEmILQ'
    AccountSerialNo:
      type: integer
      title: AccountSerialNo
      description: Indicates the serial number of the account which is added to the application
      format: int32
      minimum: 1
      maximum: 1
      examples:
        - 1
      x-stoplight:
        id: myofrfpy3wo2a
    PayinSourcePreference:
      type: object
      title: PayinSourcePreference
      description: 'Payment source preference for the application  '
      properties:
        sourceType:
          $ref: '#/components/schemas/PayinSourceType'
        source:
          oneOf:
            - $ref: '#/components/schemas/InternalFundingPreference'
            - $ref: '#/components/schemas/ExternalFundingPreference'
            - $ref: '#/components/schemas/CombinedFundingPreference'
      required:
        - sourceType
        - source
      x-stoplight:
        id: okkw9jkejlgpl
    PayinSourceType:
      type: string
      enum:
        - INTERNAL
        - EXTERNAL
        - COMBINED
      title: PayinSourceType
      description: Indicates the type of source for the payin
      pattern: '^[A-Z_]+'
      minLength: 8
      maxLength: 8
      examples:
        - INTERNAL
      x-stoplight:
        id: 5nyt7q7ez37fc
    InternalFundingPreference:
      type: object
      title: InternalFundingPreference
      description: Funds drawn from an account within the bank.
      x-stoplight:
        id: gx4gqeyebnbjy
      required:
        - amount
        - account
      properties:
        amount:
          $ref: 'stoplight://resources/overrides/wbgPBBXK2qY'
        account:
          $ref: '#/components/schemas/InternalBankAccount'
    ExternalFundingPreference:
      type: object
      title: ExternalFundingPreference
      description: Funds sourced from an external bank account.
      x-stoplight:
        id: o3q2qk9qvxa1k
      required:
        - amount
        - account
      properties:
        amount:
          $ref: 'stoplight://resources/overrides/wbgPBBXK2qY'
        account:
          $ref: '#/components/schemas/ExternalBankAccount'
    CombinedFundingPreference:
      title: CombinedFundingPreference
      description: Funds are sourced from both internal and external accounts.
      allOf:
        - $ref: '#/components/schemas/InternalFundingPreference'
        - $ref: '#/components/schemas/ExternalFundingPreference'
      x-stoplight:
        id: v0x3zc4toa407
    Payin:
      type: object
      title: Payin
      description: 'Contains the funding details, including the amount and payment method.'
      properties:
        sourceType:
          $ref: '#/components/schemas/PayinSourceType'
        source:
          oneOf:
            - $ref: '#/components/schemas/InternalFunding'
            - $ref: '#/components/schemas/ExternalFunding'
            - $ref: '#/components/schemas/CombinedFunding'
      required:
        - sourceType
        - source
      x-stoplight:
        id: t1x11o2a16hbi
    InternalFunding:
      type: object
      title: InternalFunding
      description: Funds drawn from an account within the bank.
      x-stoplight:
        id: ryga2hh0o90se
      required:
        - amount
        - instrument
      properties:
        amount:
          $ref: 'stoplight://resources/overrides/wbgPBBXK2qY'
        instrument:
          $ref: '#/components/schemas/InternalBankAccount'
    ExternalFunding:
      type: object
      title: ExternalFunding
      description: Funds sourced from an external bank account.
      x-stoplight:
        id: ao20fp8fvlkg8
      required:
        - amount
        - method
        - instrument
      properties:
        amount:
          $ref: 'stoplight://resources/overrides/wbgPBBXK2qY'
        method:
          $ref: ./models/ExternalFundingMethodType.yaml
          description: Possible methods for getting funds from external accounts
        instrument:
          oneOf:
            - $ref: '#/components/schemas/Upi'
            - $ref: '#/components/schemas/Netbanking'
    Upi:
      type: object
      title: Upi
      description: Contains details of the UPI instrument.
      x-stoplight:
        id: fwcfjb6bphkmw
      required:
        - vpa
        - account
        - paymentReferenceNo
      properties:
        vpa:
          $ref: 'stoplight://resources/overrides/ruVStTpk5p0'
        account:
          $ref: '#/components/schemas/ExternalBankAccount'
        paymentReferenceNo:
          $ref: 'stoplight://resources/overrides/dzVlqIouteM'
          x-stoplight: {}
    Netbanking:
      type: object
      title: Netbanking
      description: Contains details of the netbanking instrument.
      x-stoplight:
        id: l5n40oebtpux4
      required:
        - account
        - paymentReferenceNo
      properties:
        account:
          $ref: '#/components/schemas/ExternalBankAccount'
        paymentReferenceNo:
          $ref: 'stoplight://resources/overrides/dzVlqIouteM'
    CombinedFunding:
      title: CombinedFunding
      description: Funds are sourced from both internal and external accounts.
      x-stoplight:
        id: nztq8dlqfxcxw
      type: object
      required:
        - internal
        - external
      properties:
        internal:
          $ref: '#/components/schemas/InternalFunding'
          x-stoplight:
            id: e4woy7sko96a8
        external:
          $ref: '#/components/schemas/ExternalFunding'
          x-stoplight:
            id: e2pzhjp9emz40
    PayinRequest:
      type: object
      title: PayinRequest
      description: Payin request
      x-stoplight:
        id: odvdz2ke622gr
      required:
        - requestReferenceNo
        - amount
        - source
        - device
      properties:
        requestReferenceNo:
          $ref: 'stoplight://resources/overrides/LxUYQPKCXxM'
        amount:
          $ref: 'stoplight://resources/overrides/wbgPBBXK2qY'
        source:
          $ref: '#/components/schemas/ExternalFundingRequest'
        device:
          $ref: '#/components/schemas/Device'
    ExternalFundingRequest:
      type: object
      title: ExternalFundingRequest
      description: Funds sourced from an external bank account.
      x-stoplight:
        id: eyiccvugl6ed6
      required:
        - method
        - instrument
      properties:
        method:
          $ref: ./models/ExternalFundingMethodType.yaml
          description: Possible methods for getting funds from external accounts
        instrument:
          oneOf:
            - $ref: '#/components/schemas/UpiPaymentRequest'
            - $ref: '#/components/schemas/NetbankingPaymentRequest'
    UpiPaymentRequest:
      type: object
      title: UpiPaymentRequest
      description: Contains details of the UPI payment request
      x-stoplight:
        id: ar2fr8aiikut5
      required:
        - vpa
        - account
      properties:
        vpa:
          $ref: 'stoplight://resources/overrides/ruVStTpk5p0'
        account:
          $ref: '#/components/schemas/ExternalBankAccount'
    NetbankingPaymentRequest:
      type: object
      title: NetbankingPaymentRequest
      description: Contains details of the netbanking payment request.
      properties:
        account:
          $ref: '#/components/schemas/ExternalBankAccount'
      required:
        - account
      x-stoplight:
        id: opeyfm5n1c05u
    Device:
      type: object
      title: Device
      description: It captures details about the device initiating the request
      properties:
        channelId:
          type: string
          description: The unique code representing the specific channel.
          pattern: '^\d{1,5}$'
          minLength: 1
          maxLength: 5
          examples:
            - '10907'
        ipAddress:
          type: string
          description: The IP address of the device.
          format: ipv6
          pattern: '^([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9])?[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9])?[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9])?[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9])?[0-9])$'
          minLength: 2
          maxLength: 39
          examples:
            - '2001:0db8:85a3:0000:0000:8a2e:0370:7334'
        userAgent:
          type: string
          description: The user agent of the device.
          pattern: '^[A-Za-z ]+'
          minLength: 1
          maxLength: 100
          examples:
            - Chrome
      required:
        - channelId
        - userAgent
      x-stoplight:
        id: 01tld0hvzfmpg
    PayinInitiationResponse:
      type: object
      title: PayinInitiationResponse
      description: Response for the payin request
      x-stoplight:
        id: wfu74s8hlrtni
      required:
        - orderId
        - transactionId
      properties:
        link:
          $ref: '#/components/schemas/PaymentLink'
        orderId:
          $ref: 'stoplight://resources/overrides/DKNg0X01iqs'
        transactionId:
          $ref: 'stoplight://resources/overrides/ixcWjoDYuA0'
    PaymentLink:
      type: object
      title: PaymentLink
      description: Payment Link information
      x-stoplight:
        id: wapt3fttiu0dd
      required:
        - httpMethod
        - url
      properties:
        httpMethod:
          $ref: 'stoplight://resources/overrides/LxfGWMR4qzg'
        url:
          $ref: 'stoplight://resources/overrides/YjqooP8HUgE'
        params:
          type: object
          description: Indicates the list of parameters to be posted along with the payment URL
          additionalProperties:
            type: object
            description: Indicates the value of the parameter
    PaymentStatusRequest:
      type: object
      title: PaymentStatusRequest
      x-stoplight:
        id: 6ighht0beprif
      required:
        - requestReferenceNo
      properties:
        requestReferenceNo:
          $ref: 'stoplight://resources/overrides/LxUYQPKCXxM'
    PayinStatusResponse:
      type: object
      title: PayinStatusResponse
      x-stoplight:
        id: p5cr7qcqolbas
      required:
        - status
      properties:
        status:
          $ref: 'stoplight://resources/overrides/4jnPFrrRuI0'
    ETBFDApplicationForm:
      type: object
      title: ETBFDApplicationForm
      description: Represents the application form to open FD account for ETB customers
      x-stoplight:
        id: l8m92a0jzcm0e
      required:
        - application
        - applicant
        - account
      properties:
        application:
          $ref: '#/components/schemas/FDApplication'
        applicant:
          $ref: '#/components/schemas/ETBIndividualApplicant'
        account:
          $ref: '#/components/schemas/FDAccount'
      examples:
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
        - {}
    FDApplication:
      title: FDApplication
      description: Contains the common fields for FD applications
      x-stoplight:
        id: 03tu6sm7n4z9f
      allOf:
        - $ref: ./models/Application.yaml
          x-stoplight:
            id: wnurm5fra1b03
        - type: object
          required:
            - declaration
            - payin
          properties:
            declaration:
              $ref: '#/components/schemas/Declaration'
            payin:
              $ref: '#/components/schemas/Payin'
      examples:
        - {}
    Declaration:
      type: object
      title: Declaration
      description: 'A declaration may include consent for compliance, acknowledgment of policies, and confirmation of provided details.'
      x-stoplight:
        id: r34kag2o5sm70
      required:
        - isNominationOpted
        - da1Nomination
        - consentReferenceId
      properties:
        isNominationOpted:
          type: boolean
          description: This indicates whether the account holder chooses to nominate a beneficiary who will receive the funds in the account in the event of the account holder’s demise. If boolean is true then details in "nominationForDa1" has to be filled
        da1Nomination:
          $ref: ./models/Nominee.yaml
        consentReferenceId:
          $ref: 'stoplight://resources/overrides/JVJLO1LAh5U'
    ETBIndividualApplicant:
      type: object
      title: ETBIndividualApplicant
      description: It includes essential information of an individual
      x-stoplight:
        id: nub97d2z8vpme
      required:
        - mobileNo
        - dob
      properties:
        mobileNo:
          $ref: 'stoplight://resources/overrides/LT9qrA1aRC4'
        dob:
          $ref: 'stoplight://resources/overrides/UEKAfGKnXtA'
    FDAccount:
      type: object
      title: FDAccount
      description: Represents the preferences for FD account
      x-stoplight:
        id: 8x0xxhz2zj4g7
      required:
        - branchCode
        - amount
        - interestPayoutTreatment
        - maturityInstruction
        - tenure
        - payout
      properties:
        branchCode:
          $ref: 'stoplight://resources/overrides/DkpDaBt77Zw'
          description: The unique code representing the specific branch of the bank. The allowed values will have to comply with the values of "branchCode" codeset.
        amount:
          $ref: 'stoplight://resources/overrides/wbgPBBXK2qY'
        interestPayoutTreatment:
          $ref: 'stoplight://resources/overrides/GIH20YnXrJk'
        maturityInstruction:
          $ref: 'stoplight://resources/overrides/hNcvI153XgU'
        tenure:
          $ref: ./models/FDTenure.yaml
        payout:
          $ref: '#/components/schemas/FDPayout'
        accountSerialNo:
          $ref: '#/components/schemas/AccountSerialNo'
    ETBFDApplicationStatus:
      type: object
      title: ETBFDApplicationStatus
      description: Processing status for ETB FD application
      x-stoplight:
        id: tmhi5v9yp9q61
      required:
        - status
      properties:
        status:
          $ref: 'stoplight://resources/overrides/9mKfsqolpW4'
        accountOpeningResult:
          $ref: '#/components/schemas/AccountOpeningResult'
    AccountOpeningResult:
      type: object
      title: AccountOpeningResult
      description: Account opening result
      properties:
        accounts:
          type: array
          description: List of accounts opened as part of application processing
          items:
            oneOf:
              - $ref: '#/components/schemas/FDAccountOpeningResult'
      required:
        - accounts
      x-stoplight:
        id: 5c1hf4pjkjkjw
    FDAccountOpeningResult:
      type: object
      title: FDAccountOpeningResult
      x-stoplight:
        id: p30gaesnmzwua
      required:
        - accountSerialNo
        - accountNo
      properties:
        accountSerialNo:
          $ref: '#/components/schemas/AccountSerialNo'
        accountNo:
          $ref: 'stoplight://resources/overrides/NTK9s0hcXsQ'
        accountType:
          $ref: 'stoplight://resources/overrides/tCwO6x9ZNk0'
    ApplicationInitiationRequest:
      title: ApplicationInitiationRequest
      x-stoplight:
        id: lomcyj5xgtc2l
      type: object
      required:
        - applicant
      properties:
        applicant:
          $ref: '#/components/schemas/ETBIndividualApplicant'
          x-stoplight:
            id: vdrn4pc3oibcx
        staff:
          $ref: ./models/Staff.yaml
          x-stoplight:
            id: sgof4h8njxbtf
    ApplicationInitiationResponse:
      title: ApplicationInitiationResponse
      x-stoplight:
        id: 37v0sgxkmy0da
      type: object
      required:
        - applicationId
      properties:
        applicationId:
          $ref: 'stoplight://resources/overrides/NPaBdSGrXxc'
          x-stoplight:
            id: 7gk5382vwbmwd
x-internal: true
